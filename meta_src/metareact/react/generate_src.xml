<?xml version="1.0"?>
<root>
    <info>
        <name> generate_src </name>
        <description> It generates the source code. </description>
    </info>
    <inputs>
        
        
        
        
        
        
        
        
        
        
    <input generated="true" name="single_threaded"><origin origin_name="single_threaded" origin_location="flatten_graph/find_node_properties" generated="true"/></input><input generated="true" name="prog_lang"><origin origin_name="prog_lang" origin_location="if_root_io/if_root_io" generated="true"/></input><input generated="true" name="source_path"><origin origin_name="source_path" origin_location="flatten_graph/create_flattened_graph" generated="true"/><origin origin_name="source_path" origin_location="flatten_graph/find_node_properties" generated="true"/><origin origin_name="source_path" origin_location="flatten_graph/find_starting_points" generated="true"/><origin origin_name="source_path" origin_location="order_nodes" generated="true"/></input><input generated="true" name="root_io"><origin origin_name="root_io" origin_location="flatten_graph/find_starting_points" generated="true"/></input><input generated="true" name="check_only_side_effects_exist_dep"><origin origin_name="check_only_side_effects_exist_dep" origin_location="flatten_graph/find_node_properties" generated="true"/><origin origin_name="check_only_side_effects_exist_dep" origin_location="flatten_graph/find_starting_points" generated="true"/></input><input generated="true" name="fs"><origin origin_name="fs" origin_location="flatten_graph/create_flattened_graph" generated="true"/><origin origin_name="fs" origin_location="flatten_graph/find_node_properties" generated="true"/><origin origin_name="fs" origin_location="flatten_graph/find_starting_points" generated="true"/></input><input generated="true" name="path"><origin origin_name="path" origin_location="flatten_graph/find_node_properties" generated="true"/><origin origin_name="path" origin_location="flatten_graph/find_starting_points" generated="true"/><origin origin_name="path" origin_location="order_nodes" generated="true"/></input><input generated="true" name="cheerio"><origin origin_name="cheerio" origin_location="flatten_graph/create_flattened_graph" generated="true"/><origin origin_name="cheerio" origin_location="flatten_graph/find_node_properties" generated="true"/><origin origin_name="cheerio" origin_location="flatten_graph/find_starting_points" generated="true"/></input><input generated="true" name="generate_function_src_deb"><origin origin_name="generate_function_src_deb" origin_location="if_root_io/if_root_io" generated="true"/></input><input name="xml_files" side-effect="true" generated="true"><origin origin_name="xml_files" origin_location="flatten_graph/create_flattened_graph" generated="true"/><origin origin_name="xml_files" origin_location="flatten_graph/find_node_properties" generated="true"/><origin origin_name="xml_files" origin_location="flatten_graph/find_starting_points" generated="true"/></input></inputs>
    <outputs>
        
    <output name="error" side-effect="true" generated="true">
            <description> It returns an error when we have set the asynchronous property on a &quot;subgraph&quot; node.</description>
        <origin origin_name="error" origin_location="flatten_graph/find_node_properties" generated="true"/></output></outputs>
    
<graph generated="true"> <node fn_name="flatten_graph"><output name="flattened_graph"> <end_point fn_name="determine_subgraphs"/><end_point fn_name="level_graph"/><end_point fn_name="if_root_io"/></output><output name="starting_points"> <end_point fn_name="determine_subgraphs"/><end_point fn_name="determine_subgraph_order_str_points"/><end_point fn_name="merge_serial_subgraphs"/><end_point fn_name="order_nodes"/><end_point fn_name="if_root_io"/></output></node><node fn_name="determine_subgraphs" concurrent="true"><output name="deter_subg"> <end_point fn_name="determine_subgraph_order_str_points" dependency="true"/></output><output name="flattened_graph_v2"> <end_point fn_name="determine_subgraph_order_str_points"/></output></node><node fn_name="determine_subgraph_order_str_points"><output name="thread_starting_points"> <end_point fn_name="merge_serial_subgraphs"/></output><output name="flattened_graph_v3"> <end_point fn_name="merge_serial_subgraphs"/></output></node><node fn_name="merge_serial_subgraphs"><output name="merge_ser_subg"> <end_point fn_name="order_nodes" dependency="true"/></output><output name="flattened_graph_v4"> <end_point fn_name="order_nodes"/></output><output name="thread_starting_points_v2"> <end_point fn_name="order_nodes"/><end_point fn_name="if_root_io"/></output></node><node fn_name="order_nodes"><output name="ordered_set"> <end_point fn_name="if_root_io"/></output></node><node fn_name="level_graph"><output name="level_graph_dep"> <end_point fn_name="determine_subgraphs" dependency="true"/></output><output name="leveled_graph"> <end_point fn_name="order_nodes"/></output></node><node fn_name="if_root_io"/></graph></root>
